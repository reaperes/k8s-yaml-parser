---
# dapper-buffalo-ui-test-n5upu
apiVersion: v1
kind: Pod
metadata:
  name: "dapper-buffalo-ui-test-n5upu"
  annotations:
    "helm.sh/hook": test-success
spec:
  initContainers:
    - name: test-framework
      image: dduportal/bats:0.4.0
      command:
      - "bash"
      - "-c"
      - |
        set -ex
        # copy bats to tools dir
        cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
      - mountPath: /tools
        name: tools
  containers:
    - name: dapper-buffalo-ui-test
      image: lachlanevenson/k8s-kubectl:v1.4.8-bash
      command: ["/tools/bats/bats", "-t", "/tests/run.sh"]
      volumeMounts:
      - mountPath: /tests
        name: tests
        readOnly: true
      - mountPath: /tools
        name: tools
  volumes:
  - name: tests
    configMap:
      name: dapper-buffalo-atlantis-tests
  - name: tools
    emptyDir: {}
  restartPolicy: Never
MANIFEST:

---
# Source: atlantis/templates/secret-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dapper-buffalo-atlantis-webhook
  labels:
    app: atlantis
    chart: atlantis-3.5.3
    release: dapper-buffalo
    heritage: Tiller
data:
---
# Source: atlantis/templates/tests/test-atlantis-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dapper-buffalo-atlantis-tests
data:
  run.sh: |-
    @test "Atlantis UI is available" {
      ATLANTIS_URL=http://dapper-buffalo-atlantis.default.svc.cluster.local:80
      echo "Trying Atlantis at: $ATLANTIS_URL"
      curl $ATLANTIS_URL
    }
---
# Source: atlantis/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dapper-buffalo-atlantis
  labels:
    app: atlantis
    chart: atlantis-3.5.3
    release: dapper-buffalo
    heritage: Tiller
---
# Source: atlantis/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dapper-buffalo-atlantis
  labels:
    app: atlantis
    chart: atlantis-3.5.3
    release: dapper-buffalo
    heritage: Tiller
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 4141
      protocol: TCP
      name: atlantis
  selector:
    app: atlantis
    release: dapper-buffalo
---
# Source: atlantis/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dapper-buffalo-atlantis
  labels:
    app: atlantis
    chart: atlantis-3.5.3
    release: dapper-buffalo
    heritage: Tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: atlantis
      release: dapper-buffalo
  template:
    metadata:
      labels:
        app: atlantis
        release: dapper-buffalo
    spec:
      serviceAccountName: dapper-buffalo-atlantis
      securityContext:
        fsGroup: 1000
      volumes:
      containers:
        - name: atlantis
          image: "runatlantis/atlantis:v0.7.1"
          imagePullPolicy: IfNotPresent
          args:
            - server
          ports:
          - name: atlantis
            containerPort: 4141
          env:
          - name: ATLANTIS_DATA_DIR
            value: /atlantis-data
          - name: ATLANTIS_REPO_WHITELIST
            value: <replace-me>

          - name: ATLANTIS_PORT
            value: "4141"
          - name: ATLANTIS_ATLANTIS_URL
            value: http://chart-example.local
          livenessProbe:
            httpGet:
              path: /healthz
              port: 4141
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 60
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 4141
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 60
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          volumeMounts:
          - name: atlantis-data
            mountPath: /atlantis-data
          resources:
            limits:
              cpu: 100m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 1Gi

  volumeClaimTemplates:
  - metadata:
      name: atlantis-data
    spec:
      accessModes: ["ReadWriteOnce"] # Volume should not be shared by multiple nodes.
      resources:
        requests:
          # The biggest thing Atlantis stores is the Git repo when it checks it out.
          # It deletes the repo after the pull request is merged.
          storage: 5Gi
---
# Source: atlantis/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: dapper-buffalo-atlantis
  labels:
    app: atlantis
    chart: atlantis-3.5.3
    release: dapper-buffalo
    heritage: Tiller
spec:
  rules:
    - host: chart-example.local
      http:
        paths:
          - path: /
            backend:
              serviceName: dapper-buffalo-atlantis
              servicePort: 80
