---
# Source: envoy/templates/poddisruptionbudget.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: dandy-lambkin-envoy
  labels:
    app: envoy
    chart: envoy-1.5.0
    release: dandy-lambkin
    heritage: Tiller
spec:
  selector:
    matchLabels:
      app: envoy
      release: dandy-lambkin
  maxUnavailable: 1
---
# Source: envoy/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dandy-lambkin-envoy
  labels:
    app: envoy
    chart: envoy-1.5.0
    release: dandy-lambkin
    heritage: Tiller
data:
  envoy.yaml: |-
    ## refs:
    ## - https://www.envoyproxy.io/docs/envoy/latest/start/start#quick-start-to-run-simple-example
    ## - https://raw.githubusercontent.com/envoyproxy/envoy/master/configs/google_com_proxy.v2.yaml
    admin:
      access_log_path: /dev/stdout
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9901

    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 10000
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              access_log:
              - name: envoy.file_access_log
                config:
                  path: /dev/stdout
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      host_rewrite: www.google.com
                      cluster: service_google
              http_filters:
              - name: envoy.router
      clusters:
      - name: service_google
        connect_timeout: 0.25s
        type: LOGICAL_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        hosts:
          - socket_address:
              address: google.com
              port_value: 443
        tls_context:
          sni: www.google.com
---
# Source: envoy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: envoy
  labels:
    app: envoy
    chart: envoy-1.5.0
    release: dandy-lambkin
    heritage: Tiller
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: n0
      port: 10000
      protocol: TCP
      targetPort: n0

  selector:
    app: envoy
    release: dandy-lambkin
---
# Source: envoy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dandy-lambkin-envoy
  labels:
    app: envoy
    chart: envoy-1.5.0
    release: dandy-lambkin
    heritage: Tiller
spec:
  replicas: 2
  selector:
    matchLabels:
      app: envoy
      release: dandy-lambkin
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1

  template:
    metadata:
      labels:
        app: envoy
        release: dandy-lambkin
        component: controller
      annotations:
        checksum/config: 992fd81e69e632737a1ba495121ec418b03fa8a0a859e2375d28f1c6c44df37e
    spec:
      securityContext:
        {}

      terminationGracePeriodSeconds: 30
      containers:

        - name: envoy
          image: "envoyproxy/envoy-alpine:d920944aed67425f91fc203774aebce9609e5d9a"
          imagePullPolicy: IfNotPresent
          command:
            - /usr/bin/dumb-init
            - --

          args:
            - /usr/local/bin/envoy
            - --v2-config-only
            - -l
            - $loglevel
            - -c
            - /config/envoy.yaml

          ports:
            - name: admin
              containerPort: 9901
              protocol: TCP

            - name: n0
              containerPort: 10000
              protocol: TCP


          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: admin

          readinessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: admin

          env:
          resources:
            {}

          volumeMounts:
            - name: config
              mountPath: /config
      volumes:
        - name: config
          configMap:
            name: dandy-lambkin-envoy
